[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "trillions-of-people"
dynamic = ["version"]
description = "Generate synthetic people data for historical, present, and future scenarios"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Fred Zimmerman", email = "fredz@trillionsofpeople.info"}
]
maintainers = [
    { name = "Fred Zimmerman", email = "fredz@trillionsofpeople.info" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Sociology",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
keywords = ["synthetic-data", "demographics", "ai", "personas", "simulation", "futurism"]
requires-python = ">=3.12"
dependencies = [
    # Core functionality
    "bcrypt>=4.0.0",
    "click>=8.0.0",
    "pandas>=2.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.28.0",
    "nimble-llm-caller>=0.1.0",
    "litellm>=1.0.0",
    "tomli>=2.0.0; python_version<'3.11'",
    # Data processing
    "numpy>=1.24.0",
    "python-dateutil>=2.8.0",
    # Text processing
    "gibberish>=0.4.0",
    "nltk>=3.8.0",
    "ftfy>=6.1.0",
    # Document processing
    "PyMuPDF>=1.22.0",
    "python-docx>=0.8.11",
    "Pillow>=9.5.0",
    # Optional payment processing
    "stripe>=12.5.1",
]

[project.optional-dependencies]
web = [
    "streamlit>=1.23.0"
]
ai = [
    "openai>=0.27.0",
    "spacy>=3.5.0"
]
research = [
    "bibtexparser>=1.4.0",
    "isbnlib>=3.10.0",
    "pyzotero>=1.5.0",
    "openpyxl>=3.1.0"
]
image = [
    "html2image>=2.0.0"
]
payment = [
    "stripe>=5.4.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "responses>=0.23.0",
    "hypothesis>=6.0.0"
]
all = [
    "trillions-of-people[web,ai,research,image,payment,dev]"
]

[project.urls]
Homepage = "https://trillionsofpeople.info"
Repository = "https://github.com/fredzannarbor/trillions-of-people"
Documentation = "https://trillions-of-people.readthedocs.io"
"Bug Tracker" = "https://github.com/fredzannarbor/trillions-of-people/issues"
Changelog = "https://github.com/fredzannarbor/trillions-of-people/blob/main/CHANGELOG.md"

[project.scripts]
trillions = "trillions_of_people.cli.main:main"
trillions-web = "trillions_of_people.web.app:main"

[tool.hatch.version]
path = "trillions_of_people/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["trillions_of_people"]

[tool.hatch.build.targets.sdist]
include = [
    "/trillions_of_people",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md"
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["trillions_of_people"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "nimble_llm_caller.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["trillions_of_people"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
